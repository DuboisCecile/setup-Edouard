{
  "editor.formatOnPaste": true,
  "editor.formatOnSave": true,
  "editor.tabSize": 2,
  "eslint.enable": true,
  "javascript.format.insertSpaceAfterSemicolonInForStatements": false,
  "typescript.format.insertSpaceAfterSemicolonInForStatements": false,
  "javascript.format.semicolons": "remove",
  "typescript.format.semicolons": "remove",
  "javascript.updateImportsOnFileMove.enabled": "always",
  "typescript.updateImportsOnFileMove.enabled": "always",
  "typescript.tsdk": "node_modules/typescript/lib",
  "search.exclude": {
    "**/*.tgz": true
  },
  "folderTemplates.structures": [
    {
      "name": "Component",
      "customVariables": [],
      "omitParentDirectory": true,
      "structure": [
        {
          "fileName": "__tests__/<FTName>.test.tsx",
          "template": "UnitTest"
        }
      ],
      "openFilesWhenDone": ["__tests__/<FTName>.test.tsx"]
    },
    {
      "name": "Component Tests",
      "customVariables": [],
      "omitParentDirectory": true,
      "structure": [
        {
          "fileName": "__tests__/<FTName>.test.tsx",
          "template": "BascicTestImports"
        }
      ],
      "openFilesWhenDone": ["__tests__/<FTName>.test.tsx"]
    }
  ],
  "folderTemplates.fileTemplates": {
    "Typescript Functional Component": [
      "export function <FTName>(): React.JSX.Element {",
      "return <div><FTName></div>",
      "}"
    ],
    "IndexFile": "export * from './<FTName>'",
    "UnitTest": [
      "import { screen, render } from 'test-utils'",
      "",
      "import <FTName|pascalcase> from '../<FTName|kebabcase>'",
      "import { <FTName|pascalcase>Props} from '../types'",
      "",
      "const default<FTName|pascalcase>Props: <FTName|pascalcase>Props = {",
      "",
      "",
      "}",
      "",
      "const custom<FTName|pascalcase>Props: <FTName|pascalcase>Props = {",
      "",
      "",
      "}",
      "",
      "describe('<FTName|pascalcase> should render with', () => {",
      "it('default properties', () => {",
      "render(<<FTName|pascalcase> {...default<FTName|pascalcase>Props",
      "} />)",
      "screen.debug()",
      "const <FTName|camelcase> = screen.getByRole()",
      "expect(<FTName|camelcase>).toMatchSnapshot()",
      "})",
      "})"
    ],
    "BascicTestImports": "import { thinRender, screen } from 'test-utils'"
  },
  "conventionalCommits.scopes": [
    "API",
    "Nav",
    "Configuration",
    "Dev-Env",
    "Lib",
    "License",
    "Localization",
    "Maintenance",
    "Package-Update",
    "Script",
    "Style",
    "Doc",
    "Helper",
    "Auth",
    "Network",
    "Error-Handling"
  ],
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[javascriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[html]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[css]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "conventionalCommits.emojiFormat": "emoji",
  "conventionalCommits.promptBody": false,
  "conventionalCommits.promptFooter": false,
  "cSpell.language": "en,fr",
  "cSpell.words": ["MULILINETEXT"]
}
